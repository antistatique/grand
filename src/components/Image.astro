---
import { Picture } from 'astro:assets';

import type { ImageMetadata } from 'astro';
interface Props {
  src: string;
  alt: string;
  sizes: string;
  classes?: string;
  loading?: 'lazy' | 'eager';
  fetchpriority?: 'auto' | 'high' | 'low';
  fadeIn?: boolean;
}

const { src, alt, sizes, classes, loading, fetchpriority, fadeIn } =
  Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  '../assets/images/**/*',
);

const img = images[`../assets/images/${src}`];

if (!img)
  throw new Error(
    `"${src}" does not exist in glob: "src/assets/**/*.{jpeg,jpg,png,gif}"`,
  );
---

<figure class:list={['relative overflow-clip bg-neutral-900 isolate', classes]}>
  <div
    aria-hidden
    class="absolute inset-0 z-10 bg-[url(../assets/images/grain.gif)] mix-blend-soft-light opacity-25 [background-size:125px] md:[background-size:150px]"
  >
  </div>
  <Picture
    class:list={[
      'size-full object-cover',
      fadeIn &&
        'animate-fade-in [&.in-view.loaded:not(.splide_*)]:animate-fade-in opacity-0 [&:not(.in-view.loaded)]:[animation-delay:1s]',
    ]}
    src={img()}
    alt={alt}
    widths={[256, 384, 690, 750, 828, 1080, 1400, 1920, 2048]}
    sizes={sizes}
    formats={['avif']}
    fallbackFormat="jpeg"
    quality={60}
    loading={loading || 'lazy'}
    fetchpriority={fetchpriority || 'auto'}
    {...fadeIn && {
      'data-fade-in': true,
    }}
  />
</figure>

<script>
  const init = () => {
    /* eslint-disable prettier/prettier */
    const observer = new IntersectionObserver(
      (entries, observer) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('in-view');
            observer.unobserve(entry.target);
          }
        });
      },
      {
        root: null,
        threshold: 0.2,
      },
    );

    const images = document.querySelectorAll(
      '[data-fade-in]',
    ) as NodeListOf<HTMLImageElement>;

    images.forEach((image) => {
      image.classList.remove('animate-fade-in');

      if (image.complete) {
        image.classList.add('loaded');
      } else {
        image.addEventListener('load', () => image.classList.add('loaded'));
      }

      observer.observe(image);
    });
  };

  document.addEventListener('DOMContentLoaded', init);
  document.addEventListener('astro:page-load', init);
</script>
